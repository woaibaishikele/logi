<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.mapper.ObjectbreakagesMapper" >
  <resultMap id="BaseResultMap" type="com.example.model.Objectbreakages" >
    <id column="order_id" property="orderId" jdbcType="VARCHAR" />
    <result column="Objectbreakages_name" property="objectbreakagesName" jdbcType="VARCHAR" />
    <result column="Objectbreakages_Situation" property="objectbreakagesSituation" jdbcType="VARCHAR" />
    <result column="Objectbreakages_compensate" property="objectbreakagesCompensate" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    order_id, Objectbreakages_name, Objectbreakages_Situation, Objectbreakages_compensate
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from objectbreakages
    where order_id = #{orderId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from objectbreakages
    where order_id = #{orderId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.example.model.Objectbreakages" >
    insert into objectbreakages (order_id, Objectbreakages_name, Objectbreakages_Situation, 
      Objectbreakages_compensate)
    values (#{orderId,jdbcType=VARCHAR}, #{objectbreakagesName,jdbcType=VARCHAR}, #{objectbreakagesSituation,jdbcType=VARCHAR}, 
      #{objectbreakagesCompensate,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.example.model.Objectbreakages" >
    insert into objectbreakages
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="objectbreakagesName != null" >
        Objectbreakages_name,
      </if>
      <if test="objectbreakagesSituation != null" >
        Objectbreakages_Situation,
      </if>
      <if test="objectbreakagesCompensate != null" >
        Objectbreakages_compensate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="orderId != null" >
        #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="objectbreakagesName != null" >
        #{objectbreakagesName,jdbcType=VARCHAR},
      </if>
      <if test="objectbreakagesSituation != null" >
        #{objectbreakagesSituation,jdbcType=VARCHAR},
      </if>
      <if test="objectbreakagesCompensate != null" >
        #{objectbreakagesCompensate,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.model.Objectbreakages" >
    update objectbreakages
    <set >
      <if test="objectbreakagesName != null" >
        Objectbreakages_name = #{objectbreakagesName,jdbcType=VARCHAR},
      </if>
      <if test="objectbreakagesSituation != null" >
        Objectbreakages_Situation = #{objectbreakagesSituation,jdbcType=VARCHAR},
      </if>
      <if test="objectbreakagesCompensate != null" >
        Objectbreakages_compensate = #{objectbreakagesCompensate,jdbcType=INTEGER},
      </if>
    </set>
    where order_id = #{orderId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.model.Objectbreakages" >
    update objectbreakages
    set Objectbreakages_name = #{objectbreakagesName,jdbcType=VARCHAR},
      Objectbreakages_Situation = #{objectbreakagesSituation,jdbcType=VARCHAR},
      Objectbreakages_compensate = #{objectbreakagesCompensate,jdbcType=INTEGER}
    where order_id = #{orderId,jdbcType=VARCHAR}
  </update>
</mapper>