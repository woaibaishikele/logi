<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.mapper.BreakageauditMapper" >
  <resultMap id="BaseResultMap" type="com.example.model.Breakageaudit" >
    <id column="Breakageaudit_id" property="breakageauditId" jdbcType="INTEGER" />
    <result column="Objectbreakage_id" property="objectbreakageId" jdbcType="VARCHAR" />
    <result column="Breakageaudit_Situation" property="breakageauditSituation" jdbcType="VARCHAR" />
    <result column="Breakageaudit_CreateDate" property="breakageauditCreatedate" jdbcType="TIMESTAMP" />
    <result column="Breakageaudit_paytime" property="breakageauditPaytime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    Breakageaudit_id, Objectbreakage_id, Breakageaudit_Situation, Breakageaudit_CreateDate, 
    Breakageaudit_paytime
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from breakageaudit
    where Breakageaudit_id = #{breakageauditId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from breakageaudit
    where Breakageaudit_id = #{breakageauditId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.model.Breakageaudit" >
    insert into breakageaudit (Breakageaudit_id, Objectbreakage_id, 
      Breakageaudit_Situation, Breakageaudit_CreateDate, 
      Breakageaudit_paytime)
    values (#{breakageauditId,jdbcType=INTEGER}, #{objectbreakageId,jdbcType=VARCHAR}, 
      #{breakageauditSituation,jdbcType=VARCHAR}, #{breakageauditCreatedate,jdbcType=TIMESTAMP}, 
      #{breakageauditPaytime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.example.model.Breakageaudit" >
    insert into breakageaudit
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="breakageauditId != null" >
        Breakageaudit_id,
      </if>
      <if test="objectbreakageId != null" >
        Objectbreakage_id,
      </if>
      <if test="breakageauditSituation != null" >
        Breakageaudit_Situation,
      </if>
      <if test="breakageauditCreatedate != null" >
        Breakageaudit_CreateDate,
      </if>
      <if test="breakageauditPaytime != null" >
        Breakageaudit_paytime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="breakageauditId != null" >
        #{breakageauditId,jdbcType=INTEGER},
      </if>
      <if test="objectbreakageId != null" >
        #{objectbreakageId,jdbcType=VARCHAR},
      </if>
      <if test="breakageauditSituation != null" >
        #{breakageauditSituation,jdbcType=VARCHAR},
      </if>
      <if test="breakageauditCreatedate != null" >
        #{breakageauditCreatedate,jdbcType=TIMESTAMP},
      </if>
      <if test="breakageauditPaytime != null" >
        #{breakageauditPaytime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.model.Breakageaudit" >
    update breakageaudit
    <set >
      <if test="objectbreakageId != null" >
        Objectbreakage_id = #{objectbreakageId,jdbcType=VARCHAR},
      </if>
      <if test="breakageauditSituation != null" >
        Breakageaudit_Situation = #{breakageauditSituation,jdbcType=VARCHAR},
      </if>
      <if test="breakageauditCreatedate != null" >
        Breakageaudit_CreateDate = #{breakageauditCreatedate,jdbcType=TIMESTAMP},
      </if>
      <if test="breakageauditPaytime != null" >
        Breakageaudit_paytime = #{breakageauditPaytime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where Breakageaudit_id = #{breakageauditId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.model.Breakageaudit" >
    update breakageaudit
    set Objectbreakage_id = #{objectbreakageId,jdbcType=VARCHAR},
      Breakageaudit_Situation = #{breakageauditSituation,jdbcType=VARCHAR},
      Breakageaudit_CreateDate = #{breakageauditCreatedate,jdbcType=TIMESTAMP},
      Breakageaudit_paytime = #{breakageauditPaytime,jdbcType=TIMESTAMP}
    where Breakageaudit_id = #{breakageauditId,jdbcType=INTEGER}
  </update>
</mapper>